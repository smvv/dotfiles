#!/bin/bash

set -ue -o pipefail

# Switch script's directory
cd `dirname "$0"`

PROFILE="server"

SRC="$(pwd)/${PROFILE}"

function install_homedir() {
    if [ -e "$HOME/$1" ]; then
        echo "skip existing $1"
    else
        echo "install $1"
        ln -s "${SRC}/$1" "$HOME/$1"
    fi
}

function install_config_dir() {
    mkdir -p "$HOME/.config"

    if [ -e "$HOME/.config/$1" ]; then
        echo "skip existing $1"
    else
        echo "install .config/$1"
        ln -s "${SRC}/$1" "$HOME/.config/$1"
    fi
}

install_homedir .dir_colors
install_homedir .vim
install_homedir .vimrc

rm -f ~/.zshrc
install_homedir .zshrc

install_config_dir kitty

set -x

if [ -n "$(which brew)" ]; then
    brew install \
        macvim \
        meetingbar \
        golang \
        hyperfine \
        htop \
        fzf \
        python \
        pipenv \
        pyenv \
        jq \
        coreutils \
        gawk \
        node \
        yarn \
        zsh-autosuggestions \
        firefox \
        google-chrome \
        rectangle \
    ;

    brew install --cask kitty;
    brew install --cask flux;
fi

# Install Vundle
if [ ! -e "$HOME/.vim/bundle/Vundle.vim" ]; then
    mkdir -p "$HOME/.vim/bundle"
    git clone https://github.com/VundleVim/Vundle.vim.git "$HOME/.vim/bundle/Vundle.vim"
fi

# Install vim plugins
vim +PluginInstall +qall

pushd ~/.vim/bundle/coc.nvim 
yarn install --ignore-engines;
yarn build;
popd;

vim '+fzf#install()' '+qall'

vim '+call coc#util#install()' '+qall'
vim '+CocInstall coc-tsserver coc-json coc-html coc-css coc-go @yaegassy/coc-tailwindcss3' '+qall'
